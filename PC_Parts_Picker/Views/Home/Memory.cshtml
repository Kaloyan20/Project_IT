@model List<Data.Data.Ram>
@{
    ViewData["Title"] = "Memory";
}

<!-- Hero Section -->
<section class="hero-section text-white py-5">
    <div class="container text-center py-5">
        <h1 class="display-4 fw-bold mb-4 glow-text">Memory (RAM)</h1>
        <p class="lead mb-4">Browse our selection of high-performance memory modules for your build.</p>
    </div>
</section>

<!-- Filter Section -->
<section class="py-4 bg-dark-purple">
    <div class="container">
        <div class="row">
            <div class="col-md-3 mb-3">
                <div class="cyber-filter">
                    <label for="memoryTypeFilter" class="form-label text-light">Memory Type</label>
                    <select id="memoryTypeFilter" class="form-select">
                        <option value="">All Types</option>
                        <option value="DDR4">DDR4</option>
                        <option value="DDR5">DDR5</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="cyber-filter">
                    <label for="memorySizeFilter" class="form-label text-light">Memory Size</label>
                    <select id="memorySizeFilter" class="form-select">
                        <option value="">All Sizes</option>
                        <option value="8">8GB</option>
                        <option value="16">16GB</option>
                        <option value="32">32GB</option>
                        <option value="64">64GB</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 mb-3">
                <div class="cyber-filter">
                    <label for="priceFilter" class="form-label text-light">Max Price</label>
                    <select id="priceFilter" class="form-select">
                        <option value="">Any Price</option>
                        <option value="100">Under 100 lv.</option>
                        <option value="200">Under 200 lv.</option>
                        <option value="300">Under 300 lv.</option>
                        <option value="500">Under 500 lv.</option>
                    </select>
                </div>
            </div>
            <div class="col-md-3 mb-3 d-flex align-items-end">
                <button id="applyFilters" class="btn btn-neon w-100">Apply Filters</button>
            </div>
        </div>
    </div>
</section>

<!-- RAM Listings -->
<section class="py-5 bg-darkest">
    <div class="container">
        <div class="cyber-table-container">
            <table class="table cyber-table" id="ramTable">
                <thead>
                    <tr>
                        <th scope="col" class="text-center">Image</th>
                        <th scope="col">Model</th>
                        <th scope="col">Memory Size</th>
                        <th scope="col">Memory Type</th>
                        <th scope="col">Color</th>
                        <th scope="col" class="text-end">Price</th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var ram in Model)
                    {
                        <tr data-memory-type="@ram.MemoryType" data-memory-size="@ram.MemorySize" data-price="@ram.Price">
                            <td class="text-center">
                                <div class="component-img-container">
                                    @if (!string.IsNullOrEmpty(ram.Image))
                                    {
                                        <img src="@ram.Image" alt="@ram.Model" class="component-img">
                                    }
                                    else
                                    {
                                        <img src="/images/placeholder-ram.png" alt="@ram.Model" class="component-img">
                                    }
                                </div>
                            </td>
                            <td>@ram.Model</td>
                            <td>@(ram.MemorySize.HasValue ? $"{ram.MemorySize} GB" : "N/A")</td>
                            <td>@ram.MemoryType</td>
                            <td>@(string.IsNullOrEmpty(ram.Color) ? "N/A" : ram.Color)</td>
                            <td class="text-end">@(ram.Price.HasValue ? $"{ram.Price:F2} lv." : "N/A")</td>
                            <td class="text-center">
                                <button class="btn btn-sm btn-outline-neon add-to-build" data-id="@ram.Id">Add to Build</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#applyFilters').click(function () {
                const memoryTypeFilter = $('#memoryTypeFilter').val();
                const memorySizeFilter = parseInt($('#memorySizeFilter').val()) || 0;
                const priceFilter = parseFloat($('#priceFilter').val()) || Number.MAX_VALUE;

                $('#ramTable tbody tr').each(function () {
                    const memoryType = $(this).data('memory-type');
                    const memorySize = parseInt($(this).data('memory-size')) || 0;
                    const price = parseFloat($(this).data('price')) || 0;

                    const memoryTypeMatch = !memoryTypeFilter || memoryType === memoryTypeFilter;
                    const memorySizeMatch = !memorySizeFilter || memorySize === memorySizeFilter;
                    const priceMatch = price <= priceFilter;

                    if (memoryTypeMatch && memorySizeMatch && priceMatch) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                });
            });

            $('.add-to-build').click(function () {
                const ramId = $(this).data('id');
                alert('Added RAM ID ' + ramId + ' to your build');
            });
        });
    </script>

    <style>
        /* Custom styles for component listings */
        :root {
            --neon-pink: #ff00ff;
            --neon-blue: #00ffff;
            --neon-purple: #8a2be2;
            --dark-purple: #1a1025;
            --darkest: #0d0714;
            --card-bg: #1e1636;
        }

        body {
            background-color: var(--darkest);
            color: #ffffff;
        }

        .hero-section {
            background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)), url('/images/Motherboard.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            min-height: 75vh;
            display: flex;
            align-items: center;
            position: relative;
            overflow: hidden;
        }

        .glow-text {
            color: white;
            text-shadow: 0 0 10px rgba(255, 0, 255, 0.7), 0 0 20px rgba(255, 0, 255, 0.5);
        }

        .bg-dark-purple {
            background-color: var(--dark-purple);
        }

        .bg-darkest {
            background-color: var(--darkest);
        }

        .cyber-table-container {
            background-color: var(--card-bg);
            border-radius: 8px;
            padding: 1rem;
            border: 1px solid rgba(138, 43, 226, 0.3);
            box-shadow: 0 0 15px rgba(138, 43, 226, 0.2);
        }

        .cyber-table {
            color: #fff;
            margin-bottom: 0;
        }

            .cyber-table thead th {
                border-bottom: 2px solid var(--neon-purple);
                color: var(--neon-blue);
                font-family: 'Orbitron', sans-serif;
                padding: 1rem 0.75rem;
                background-color: rgba(26, 16, 37, 0.8);
            }

            .cyber-table tbody tr {
                border-bottom: 1px solid rgba(138, 43, 226, 0.3);
                transition: all 0.2s;
            }

                .cyber-table tbody tr:hover {
                    background-color: rgba(138, 43, 226, 0.1);
                }

            .cyber-table tbody td {
                padding: 1rem 0.75rem;
                vertical-align: middle;
            }

        .component-img-container {
            width: 80px;
            height: 60px;
            overflow: hidden;
            margin: 0 auto;
        }

        .component-img {
            width: 100%;
            height: 100%;
            object-fit: contain;
        }

        .cyber-filter label {
            color: var(--neon-blue);
            margin-bottom: 0.5rem;
            font-weight: 500;
        }

        .cyber-filter select {
            background-color: rgba(26, 16, 37, 0.8);
            border: 1px solid var(--neon-purple);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: 4px;
        }

            .cyber-filter select:focus {
                box-shadow: 0 0 0 0.25rem rgba(255, 0, 255, 0.25);
                border-color: var(--neon-pink);
            }

        .btn-neon {
            background: var(--neon-pink);
            border-color: var(--neon-pink);
            color: #fff;
            text-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
            box-shadow: 0 0 10px rgba(255, 0, 255, 0.7);
            transition: all 0.3s ease;
        }

            .btn-neon:hover {
                background: #ff33ff;
                box-shadow: 0 0 20px rgba(255, 0, 255, 0.9);
                transform: translateY(-2px);
                color: #fff;
            }

        .btn-outline-neon {
            color: var(--neon-pink);
            border-color: var(--neon-pink);
            background: transparent;
            transition: all 0.3s;
        }

            .btn-outline-neon:hover {
                background-color: var(--neon-pink);
                color: #fff;
                box-shadow: 0 0 10px rgba(255, 0, 255, 0.7);
            }
    </style>
}